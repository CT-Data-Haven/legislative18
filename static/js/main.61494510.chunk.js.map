{"version":3,"sources":["img/logo.png","components/utils.js","components/Intro.jsx","components/Stage.jsx","components/Controls.jsx","components/Legend.jsx","components/Choropleth.jsx","components/Profile.jsx","components/Toggle.jsx","components/Footer.jsx","components/ChartHelper.jsx","components/Chart.jsx","components/VizContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","_unbox","data","length","_filterByKey","key","value","first","_","getMappable","meta","indicators","getLegislator","legs","district","getSubMeta","indicator","fmt","fmtStr","d","undefined","format","firstDistrict","chamber","charAt","toUpperCase","makeTitle","lbl","capAll","wrds","stripZeroes","location","keepChamber","numbers","match","makeVizHdr","viz","submeta","display","getProfile","profData","compareCt","level","locations","map","l","wide","m","vals","makeProfColumns","row","cols","keys","pull","c","dataField","text","align","classes","makeGeoJson","shp","topojson","objects","shape","makeChoroScale","scheme","nBrks","mapValues","values","sort","brks","ckmeans","slice","scaleThreshold","domain","range","makeQualScales","maxStroke","color","Color","desat","desaturate","lighten","alpha","string","hilite","fill","strokeWidth","stroke","other","both","dist","makeTooltip","getExtent","pad","min","max","makeAvgAnnotation","dy","type","className","dx","connector","end","note","label","orientation","lineType","Intro","Alert","variant","href","Stage","props","stageClasses","classNames","TableStage","ProfileStage","ChartStage","hdr","chart","profile","Card","Header","as","Body","children","Controls","register","useFormContext","topics","Object","Form","Row","Col","lg","md","Group","controlId","Label","Control","name","ref","onChange","chambers","Legend","scale","colorscale","labelFormat","Overlay","LayersControl","townStyle","fillColor","weight","pointerEvents","Choropleth","getStyle","feature","id","properties","opacity","fillOpacity","handleFeature","layer","on","featureHilite","featureUnhilite","bindTooltip","direction","offset","target","setStyle","bbox","geo","b","getBounds","this","layers","districts","townGeo","townShp","Map","bounds","zoomSnap","zoomDelta","scrollWheelZoom","TileLayer","url","attribution","subdomains","minZoom","maxZoom","ext","checked","LayerGroup","GeoJSON","style","onClick","onEachFeature","showTowns","interactive","React","Component","DistrictInfo","title","legislator","party","bill_url","website","ProfileTable","Fragment","bootstrap4","headerClasses","rowClasses","i","bordered","keyField","columns","wrapperClasses","TownInfo","towns","join","Profile","ListGroup","Item","Toggle","Check","custom","Footer","Heading","Image","src","alt","popover","Popover","Title","Content","ChartHelper","OverlayTrigger","trigger","placement","overlay","Button","size","Facet","ctAnnotation","rest","axes","orient","baseline","ticks","tickFormat","r","strength","iteration","margin","top","right","bottom","left","projection","responsiveWidth","pieceHoverAnnotation","pieceIDAccessor","annotations","Chart","oAccessor","rAccessor","rExtent","e","scales","customClickBehavior","tooltipContent","state","t","icon","VizContainer","tabs","getContent","items","transform","showMore","tabClassName","panelClassName","shapes","house","require","senate","titles","App","formMethods","useForm","mode","initValues","topic","useState","setTopic","setChamber","setIndicator","setDistrict","setViz","useReducer","newState","townsToggled","ctToggled","toggles","setToggles","onToggle","topicMeta","mapData","topicData","filter","keyBy","makeMapData","chartData","sortBy","groupBy","makeChartData","mappable","Container","handleSubmit","formData","getValues","_chamber","_topic","_indicator","palette","legislators","xwalk","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61494510.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9144a510.png\";","import * as _ from 'lodash';\nimport * as topojson from 'topojson-client';\nimport { scaleThreshold, scaleOrdinal } from 'd3-scale';\nimport { format } from 'd3-format';\nimport { ckmeans } from 'simple-statistics';\nimport Color from 'color';\n\n///////////// general utilities\nconst _unbox = (data) => (\n  data.length > 1 ? data : data[0]\n);\n\n///////////// filtering\nconst _filterByKey = (data, key, value, first = true) => (\n  first ? _.find(data, { [key]: value }) : _.filter(data, { [key]: value })\n);\n\nconst getMappable = (meta) => (\n  _filterByKey(meta.indicators, 'type', 'm', false)\n);\n\nconst getLegislator = (legs, district) => (\n  _filterByKey(legs, 'id', district)\n);\n\nconst getSubMeta = (meta, indicator) => (\n  _filterByKey(meta, 'indicator', indicator)\n);\n\n///////////// strings + display\nconst fmt = (fmtStr) => (\n  (d) => (d === null || d === undefined ? 'N/A' : format(fmtStr)(d))\n);\n\nconst firstDistrict = (chamber) => (\n  chamber.charAt(0).toUpperCase() + '001'\n);\n\nconst makeTitle = (lbl, capAll = false) => {\n  const wrds = _.replace(lbl, /_/g, ' ');\n  return capAll ? _.startCase(wrds) : _.upperFirst(wrds);\n};\n\nconst stripZeroes = (location, keepChamber = false) => {\n  const numbers = location.match(/\\d+/);\n  if (_.isNull(numbers)) {\n    return location;\n  } else {\n    if (keepChamber) {\n      return `${ location.charAt(0) }${ +numbers }`;\n    } else {\n      return +numbers;\n    }\n  }\n};\n\nconst makeVizHdr = (viz, meta, indicator) => {\n  if (viz === 'map') {\n    const submeta = _filterByKey(meta.indicators, 'indicator', indicator);\n    return _.values(submeta).length ? submeta.display : '';\n  } else {\n    return `${ meta.display } indicators`;\n  }\n};\n\nconst compileHeader = (type) => {\n  const headers = {\n    chart: '<%= lbl %> by <%= chamber %> district',\n    profile: '<%= lbl %> at a glance, <%= chamber %> District <%= location %>'\n  };\n  return _.template(headers[type]);\n};\n\n////////////// data prep + shaping\nconst makeMapData = (topicData, indicator) => (\n  _.chain(topicData)\n    .filter((d) => _.endsWith(d.level, 'district'))\n    .map((d) => ({\n      name: d.location,\n      value: d[indicator]\n    }))\n    .keyBy('name')\n    .value()\n);\n\nconst makeChartData = (topicData, topicMeta, district) => {\n  const indicators = _.map(getMappable(topicMeta), 'indicator');\n  return _.chain(topicData)\n    .map((d) => _.pick(d, ['level', 'location', ...indicators]))\n    .sortBy([(d) => d.location === district])\n    .groupBy('level')\n    .mapValues(_unbox)\n    .value();\n};\n\nconst getProfile = (data, location, meta, compareCt = false) => {\n  let profData;\n  if (compareCt) {\n    profData = _.filter(data, (d) => (d.location === location || d.level === 'state'));\n  } else {\n    profData = [_filterByKey(data, 'location', location)];\n  }\n  profData = _.compact(profData);\n  if (profData.length === 0) {\n    return [];\n  } else {\n    const locations = _.map(profData, 'location').map((l) => stripZeroes(l, true));\n    const wide = _.map(meta, (m) => {\n      const vals = _.chain(profData)\n        .map((d) => d[m.indicator])\n        .map(fmt(m.format))\n        .value();\n      return {\n        indicator: m.display,\n        ..._.zipObject(locations, vals)\n      };\n    });\n    return wide;\n    // return [];\n  }\n};\n\nconst makeProfColumns = (row) => {\n  const cols = _.chain(row)\n    .keys()\n    .pull('indicator')\n    .map((c) => ({\n      dataField: c,\n      text: _.upperFirst(c),\n      align: 'right',\n      classes: 'text-right'\n    }))\n    .value();\n  const indicatorCol = {\n    dataField: 'indicator',\n    text: 'Indicator',\n    classes: 'table-header-col'\n  };\n  return [indicatorCol, ...cols];\n};\n\n//////////////// geography\nconst getBounds = (geo) => {\n  const b = topojson.bbox(geo);\n  return [[ b[1], b[0] ], [ b[3], b[2] ]];\n}\n\nconst makeGeoJson = (shp) => (\n  topojson.feature(shp, shp.objects.shape)\n);\n\nconst makeGeoLayers = (shp) => {\n  const districts = makeGeoJson(shp);\n  // add town boundaries?\n  return { districts };\n};\n\n////////////// viz\nconst makeChoroScale = (data, scheme, nBrks) => {\n  const vals = _.chain(data)\n    .mapValues('value')\n    .values()\n    .sort()\n    .value();\n  if (!vals.length) {\n    return scaleThreshold().domain([0, 1]).range(['#ccc']);\n  } else {\n    const brks = ckmeans(vals, nBrks).map((d) => d[0]).slice(1);\n    return scaleThreshold()\n      .domain(brks)\n      .range(scheme[nBrks]);\n  }\n};\n\nconst makeQualScales = (district, scheme, minStroke = 0, maxStroke = 2) => {\n  const color = Color(_.last(scheme));\n  const desat = color.desaturate(0.95).lighten(0.3).alpha(0.7).string();\n  const hilite = {\n    fill: color,\n    strokeWidth: maxStroke,\n    stroke: color\n  };\n  const other = {\n    fill: desat,\n    // strokeWidth: 0.5,\n    stroke: '#efefef'\n  };\n  const both = {\n    // stroke: color,\n    // r: 5\n  };\n  return (\n    (d, dist) => (d.location === dist ? { ...hilite, ...both } : { ...other, ...both })\n  );\n};\n\nconst makeTooltip = (location, value, format) => (\n  `Dist. ${ stripZeroes(location) }: ${ fmt(format)(value) }`\n);\n\nconst getExtent = (data, indicator, pad = 0.08) => {\n  const values = _.map(data, indicator);\n  const min = _.min(values);\n  const max = _.max(values);\n  const range = max - min;\n  return [min - (range * pad), max + (range * pad)];\n};\n\nconst makeAvgAnnotation = (value, format, lbl = 'CT avg', dy = -10) => ({\n  type: 'r',\n  value: value,\n  className: 'chart-annotation',\n  color: '#333',\n  dy: dy,\n  dx: 0,\n  // disable: ['connector'],\n  connector: { end: 'none' },\n  note: {\n    label: `${ lbl }: ${ fmt(format)(value) }`,\n    align: 'top',\n    // padding: -10,\n    orientation: 'topBottom',\n    lineType: null\n  }\n});\n\n///////////////// export\n\nexport {\n  compileHeader,\n  firstDistrict,\n  fmt,\n  getBounds,\n  getExtent,\n  getLegislator,\n  getMappable,\n  getProfile,\n  getSubMeta,\n  makeAvgAnnotation,\n  makeChartData,\n  makeChoroScale,\n  makeGeoJson,\n  makeGeoLayers,\n  makeMapData,\n  makeProfColumns,\n  makeQualScales,\n  makeTitle,\n  makeTooltip,\n  makeVizHdr,\n  stripZeroes\n};\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst text = 'Select a legislative chamber, topic, and indicator to view on the map. Clicking a district on the map or a dot on the charts will bring up detailed information on that district and its representative or senator. More detailed printable overviews are available for each district at the bottom of the page. Note that Community Wellbeing Survey indicators are only available for Senate districts.';\n\nconst Intro = () => (\n\t<div className='Intro'>\n\t\t<Alert variant='light' className='border border-color-info'>\n\t\t\t<p>{ text } For more information, visit DataHaven's <a href=\"http://www.ctdatahaven.org/communities\">Communities</a> page or <a href=\"http://www.ctdatahaven.org\">main website</a>.</p>\n\t\t</Alert>\n\t</div>\n);\n\nexport default Intro;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport { compileHeader, makeTitle, stripZeroes } from './utils';\n\nimport '../styles/Stage.css';\n\nconst Stage = (props) => {\n  const stageClasses = classNames({\n    Stage: true,\n    TableStage: props.type === 'profile' || props.type === 'table',\n    ProfileStage: props.type === 'profile',\n    ChartStage: props.type === 'chart'\n  });\n\n  const hdr = compileHeader(props.type)({\n    ...props,\n    chamber: makeTitle(props.chamber),\n    location: stripZeroes(props.location)\n  });\n  return (\n    <div className={ stageClasses }>\n      <Card>\n        <Card.Header as='h3'>\n          { hdr }\n        </Card.Header>\n        <Card.Body>\n          { props.children }\n        </Card.Body>\n      </Card>\n    </div>\n  )\n};\n\nexport default Stage;\n","import React from 'react';\nimport { Form, Col, Row } from 'react-bootstrap';\nimport { useFormContext } from 'react-hook-form';\nimport { makeTitle } from './utils.js';\n\nconst Controls = (props) => {\n  const { register } = useFormContext();\n  const topics = Object.keys(props.meta);\n\n  return (\n    <div className='Controls'>\n      <Form>\n        <Row>\n          <Col lg={ 4 } md={ 6 }>\n            <Form.Group controlId='_chamber'>\n              <Form.Label>Select a chamber</Form.Label>\n              <Form.Control as='select' name='_chamber' className='custom-select' ref={ register } onChange={ props.onChange }>\n                { props.chambers.map((d) => (\n                  <option key={ `chamber-${ d }` } value={ d }>{ makeTitle(d) }</option>\n                )) }\n              </Form.Control>\n            </Form.Group>\n          </Col>\n\n          { /* spacer */ }\n          <Col lg={ 4 } md={ 6 } className='d-lg-none'></Col>\n\n          <Col lg={ 4 } md={ 6 }>\n            <Form.Group controlId='_topic'>\n              <Form.Label>Select a topic</Form.Label>\n              <Form.Control as='select' name='_topic' className='custom-select' ref={ register } onChange={ props.onChange }>\n                { topics.map((d) => (\n                  <option key={ `topic-${ d }` } value={ d }>{ props.meta[d].display }</option>\n                )) }\n              </Form.Control>\n            </Form.Group>\n          </Col>\n\n          <Col lg={ 4 } md={ 6 }>\n            <Form.Group controlId='_indicator'>\n              <Form.Label>Select an indicator</Form.Label>\n              <Form.Control as='select' name='_indicator' className='custom-select' ref={ register } onChange={ props.onChange }>\n                { props.indicators.map((d) => (\n                  <option key={ `indicator-${ d.indicator }` } value={ d.indicator }>{ d.display }</option>\n                )) }\n              </Form.Control>\n            </Form.Group>\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  );\n};\n\nexport default Controls;\n","import React from 'react';\nimport { LegendThreshold } from '@vx/legend';\nimport { fmt } from './utils.js';\n\nimport '../styles/Legend.css';\n\nconst Legend = (props) => {\n  return (\n    <div className='Legend'>\n      <LegendThreshold\n        scale={ props.colorscale }\n        labelFormat={ (label) => label ? fmt(props.meta.format)(label) : '' }\n      />\n    </div>\n  );\n};\n\nexport default Legend;\n","import React from 'react';\nimport { Map, TileLayer, GeoJSON, LayerGroup, LayersControl } from 'react-leaflet';\nimport { getBounds, makeGeoLayers, makeGeoJson, makeTooltip } from './utils.js';\nimport Legend from './Legend';\n\nimport '../styles/Chart.css';\n\nconst { Overlay } = LayersControl;\n\nconst townStyle = {\n  fillColor: 'transparent',\n  color: '#555',\n  weight: 1,\n  pointerEvents: 'none'\n};\n\nexport default class Choropleth extends React.Component {\n\n  getStyle = (feature) => {\n    const id = feature.properties.id;\n    const fillColor = this.props.data[id] ? this.props.colorscale(this.props.data[id].value) : '#ccc';\n    return {\n      fillColor,\n      color: '#333',\n      weight: 0.5,\n      opacity: 1,\n      fillOpacity: 0.75\n    };\n  };\n\n  handleFeature = (feature, layer) => {\n    let id = feature.properties.id;\n    layer\n      .on('mouseover', this.featureHilite)\n      .on('mouseout', this.featureUnhilite);\n    layer.bindTooltip(() => (\n      makeTooltip(id, this.props.data[id].value, this.props.meta.format)),\n      { direction: 'top', offset: [0, -20], className: 'custom-tip' }\n    );\n  };\n\n  featureHilite = ({ target }) => {\n    target.setStyle({\n      fillOpacity: 0.95,\n      weight: 1\n    });\n\n  };\n  featureUnhilite = ({ target }) => {\n    target.setStyle({\n      fillOpacity: 0.75,\n      weight: 0.5\n    });\n  };\n\n  render() {\n    const bbox = getBounds(this.props.shape);\n    const layers = makeGeoLayers(this.props.shape);\n    const townGeo = makeGeoJson(this.props.townShp);\n\n    return (\n      <div className='Chart Choropleth'>\n        { this.props.children }\n        <Map\n          key={ this.props.chamber }\n          bounds={ bbox }\n          zoomSnap={ 0.5 }\n          zoomDelta={ 0.5 }\n          scrollWheelZoom={ false }\n        >\n          <TileLayer\n            url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}.{ ext }\"\n            attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n            subdomains=\"abcd\"\n            minZoom={ 8 }\n            maxZoom={ 16 }\n            ext=\"png\"\n            opacity={ 0.4 }\n          />\n          <LayersControl>\n            <Overlay checked name='districts'>\n              <LayerGroup key={ this.props.chamber }>\n                <GeoJSON\n                  data={ layers.districts }\n                  key={ (feature) => feature.properties.id }\n                  style={ this.getStyle }\n                  onClick={ this.props.onClick }\n                  onEachFeature={ this.handleFeature }\n                />\n              </LayerGroup>\n            </Overlay>\n            <Overlay checked={ this.props.showTowns } name='towns'>\n              <LayerGroup key='towns'>\n                <GeoJSON\n                  data={ townGeo }\n                  style={ townStyle }\n                  interactive={ false }\n                />\n              </LayerGroup>\n            </Overlay>\n          </LayersControl>\n        </Map>\n        <Legend\n          colorscale={ this.props.colorscale }\n          meta={ this.props.meta }\n        />\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { ListGroup } from 'react-bootstrap';\nimport { makeProfColumns } from './utils.js';\n\nimport '../styles/Profile.css';\n\nconst Profile = (props) => (\n  <div className='Profile' id='profile'>\n    <ListGroup variant='flush'>\n      { props.legislator &&\n        <ListGroup.Item>\n          <DistrictInfo { ...props }>\n            { props.children }\n          </DistrictInfo>\n        </ListGroup.Item>\n      }\n      <ListGroup.Item>\n        <ProfileTable { ...props } />\n      </ListGroup.Item>\n      { props.towns &&\n        <ListGroup.Item>\n          <TownInfo { ...props } />\n        </ListGroup.Item>\n      }\n    </ListGroup>\n  </div>\n);\n\nconst DistrictInfo = (props) => (\n  <div className='infobox'>\n    <div className='title'>{ `${ props.title } ${ props.legislator.name } (${ props.legislator.party })` }</div>\n    <ul className='list-unstyled'>\n      <li className=''><a href={ props.legislator.bill_url }>Sponsored bills, current session</a></li>\n      <li className=''><a href={ props.legislator.website }>Website</a></li>\n    </ul>\n    <div>{ props.children }</div>\n  </div>\n);\n\nconst ProfileTable = (props) => (\n  <React.Fragment>\n    <BootstrapTable\n      bootstrap4\n      classes='table'\n      headerClasses='thead-light'\n      rowClasses={ (row, i) => `row-${ row.level }` }\n      bordered={ false }\n      keyField={ 'id' }\n      data={ props.data }\n      // columns={ [{\n      //   dataField: 'indicator',\n      //   text: 'Indicator',\n      //   classes: 'table-header-col'\n      // }, {\n      //   dataField: 'value',\n      //   text: 'Value',\n      //   align: 'right',\n      //   classes: 'text-right'\n      // }] }\n      columns={ makeProfColumns(props.data[0]) }\n      wrapperClasses='table-responsive'\n    />\n  </React.Fragment>\n);\n\nconst TownInfo = (props) => (\n  <div className='infobox'>\n    <p className='small'>Includes all or parts of { props.towns.join(', ') }</p>\n  </div>\n);\n\nexport default Profile;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nconst Toggle = (props) => (\n  <Form>\n    <Form.Check\n      custom\n      type='checkbox'\n      { ...props }\n    />\n  </Form>\n);\n\nconst TownToggle = (props) => (\n  <Form>\n    <Form.Check\n      custom\n      type='checkbox'\n      id='townCheck'\n      label='Show town boundaries'\n      onChange={ props.onChange }\n      checked={ props.checked }\n    />\n  </Form>\n);\n\nexport default Toggle;\n","import React from 'react';\nimport { Image, Alert } from 'react-bootstrap';\n// import Download from './Download';\n// import Sources from './Sources';\n// import { makeDownloads } from './utils.js';\n\nimport '../styles/Footer.css';\n\nimport src from '../img/logo.png';\n\n\n\nconst Footer = (props) =>  (\n  <div className='Footer'>\n    <Alert variant='light'>\n      <Alert.Heading as='h2'>Downloads</Alert.Heading>\n\n      <Alert.Heading as='h3'>Download district handouts</Alert.Heading>\n\n      <hr />\n\n      <Alert.Heading as='h3'>Download data on all districts</Alert.Heading>\n\n      <hr />\n\n      <p>Legislators' names and websites are current as of February 2020.</p>\n\n      <a href='http://www.ctdatahaven.org'><Image src={ src } id='logo' alt='DataHaven logo' /></a>\n    </Alert>\n  </div>\n);\n\n\nexport default Footer;\n","import React from 'react';\nimport { Button, Popover, OverlayTrigger } from 'react-bootstrap';\n\nconst ChartHelper = () => (\n  <div className='ChartHelper'>\n    <OverlayTrigger trigger='click' placement='bottom' overlay={ popover }>\n      <Button variant='outline-info' size='sm'>About</Button>\n    </OverlayTrigger>\n  </div>\n);\n\nconst popover = (\n  <Popover id='chart-help-popover'>\n    <Popover.Title as='h4'>About this chart</Popover.Title>\n    <Popover.Content>This chart shows the range of values throughout the state. Each dot represents one district. More common values will have many dots clustered around them, while less common ones have few dots.</Popover.Content>\n  </Popover>\n);\n\nexport default ChartHelper;\n","import React from 'react';\nimport { ResponsiveOrdinalFrame } from 'semiotic';\nimport { fmt, getExtent, makeTooltip, makeAvgAnnotation } from './utils';\nimport ChartHelper from './ChartHelper';\n// import '../styles/Chart.css';\n\nconst Chart = (props) => {\n  return (\n    <div className='Chart'>\n      <ChartHelper />\n      { props.meta.map((m, i) =>  (\n        <Facet\n          key={ `chart-${ i }` }\n          data={ props.data.district }\n          display={ m.display }\n          oAccessor={ 'none' }\n          rAccessor={ m.indicator }\n          rExtent={ getExtent(props.data.district, m.indicator) }\n          style={ (e) => (props.scales(e, props.district)) }\n          format={ m.format ? fmt(m.format) : (e) => e }\n          title={ m.display }\n          customClickBehavior={ props.onClick }\n          tooltipContent={ (d) => (\n            <div className='custom-tip tooltip-content'>{ makeTooltip(d.location, d.value, m.format) }</div>\n          )}\n          ctAnnotation={ makeAvgAnnotation(props.data.state[m.indicator], m.format) }\n        />\n      )\n      ) }\n    </div>\n  );\n};\n\nconst Facet = ({ display, format, ctAnnotation, ...rest }) => (\n  <div className='Facet'>\n    <h4 className='facet-heading'>{ display }</h4>\n    <ResponsiveOrdinalFrame\n      { ...rest }\n      axes={\n        [{ orient: 'bottom', baseline: 'under', ticks: 4, tickFormat: format }]\n      }\n      size={ [500, 160] }\n      type={{\n        type: 'swarm',\n        r: 5,\n        strength: 1,\n        iteration: 40\n      }}\n      // renderKey={ (d) => +d.location.substring(1) }\n      margin={{ top: 5, right: 10, bottom: 40, left: 10 }}\n      projection='horizontal'\n      responsiveWidth={ true }\n      pieceHoverAnnotation={ [{\n        type: 'highlight',\n        style: {\n          opacity: 1.0,\n          stroke: '#444'\n        }\n      }, {\n        type: 'frame-hover'\n      }] }\n      pieceIDAccessor='location'\n      annotations={ [ ctAnnotation ] }\n    />\n  </div>\n);\n\nexport default Chart;\n","import React from 'react';\nimport Tabs from 'react-responsive-tabs';\n\nimport 'react-responsive-tabs/styles.css';\nimport '../styles/VizContainer.css';\n\nconst makeTitle = (d, t) => (\n  <div><span className='nav-icon'>{ t[d.key].icon }</span>{ t[d.key].title }</div>\n);\n\nconst VizContainer = (props) => {\n  const tabs = props.children.map((d, i) => ({\n    title: makeTitle(d, props.tabs),\n    key: d.key,\n    getContent: () => d\n  }));\n  return (\n    <div className='VizContainer'>\n      <Tabs\n        onChange={ props.onChange }\n        items={ tabs }\n        transform={ false }\n        showMore={ false }\n        tabClassName='viz-tab-nav'\n        panelClassName='viz-tab-panel'\n      />\n    </div>\n  );\n};\n\nexport default VizContainer;\n","import React, { useState, useReducer } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useForm, FormContext } from 'react-hook-form';\nimport { schemeBuPu as palette } from 'd3-scale-chromatic';\nimport { getMappable, firstDistrict, makeMapData, makeChartData, makeChoroScale, makeQualScales, getProfile, getLegislator, getSubMeta, makeVizHdr } from './components/utils.js';\nimport { FaChartBar, FaGlobeAmericas } from 'react-icons/fa';\n\nimport Intro from './components/Intro';\nimport Stage from './components/Stage';\nimport Controls from './components/Controls';\nimport Choropleth from './components/Choropleth';\nimport Profile from './components/Profile';\nimport Toggle from './components/Toggle';\nimport Footer from './components/Footer';\nimport Chart from './components/Chart';\nimport VizContainer from './components/VizContainer';\n\nimport './App.css';\n\nimport meta from './data/legislative_meta_2018.json';\nimport data from './data/legislative_wide_2018.json';\nimport legislators from './data/legislators.json';\nimport xwalk from './data/town_lookup.json';\nconst shapes = {\n  house: require('./shapes/house_topo.json'),\n  senate: require('./shapes/senate_topo.json'),\n  towns: require('./shapes/towns_topo.json')\n};\nconst titles = {\n  house: 'Rep.',\n  senate: 'Sen.'\n};\n\nconst App = () => {\n  const formMethods = useForm({\n    mode: 'onChange'\n  });\n  const chambers = Object.keys(data);\n  const topics = Object.keys(meta[chambers[0]]);\n  const initValues = {\n    topic: topics[0],\n    chamber: chambers[0],\n    indicator: getMappable(meta[chambers[0]][topics[0]])[0].indicator,\n    district: firstDistrict(chambers[0]),\n    viz: 'map'\n  };\n\n  const [topic, setTopic] = useState(initValues.topic);\n  const [chamber, setChamber] = useState(initValues.chamber);\n  const [indicator, setIndicator] = useState(initValues.indicator);\n  const [district, setDistrict] = useState(initValues.district);\n  const [viz, setViz] = useState(initValues.viz);\n\n  const [toggles, setToggles] = useReducer((state, newState) => ({ ...state, ...newState }), {\n    townsToggled: false,\n    ctToggled: false\n  });\n\n  const onFormChange = (formData, e) => {\n    const { _chamber, _topic, _indicator } = formMethods.getValues();\n\n    if (e.target.name === '_topic') {\n      // need to change to watch for chamber change?\n      setIndicator(getMappable(meta[_chamber][_topic])[0].indicator);\n    } else {\n      setIndicator(_indicator);\n    }\n\n    setTopic(_topic);\n    // setChamber((prevChamber) => _chamber);\n\n    if (e.target.name === '_chamber') {\n      setChamber(_chamber);\n      setDistrict(firstDistrict(_chamber));\n    }\n  };\n\n  const onFeatureClick = ({ layer }) => {\n    setDistrict(layer.feature.properties.id);\n  };\n\n  const onToggle = ({ target }) => {\n    const { id, checked } = target;\n    setToggles({ [id]: checked });\n  };\n\n  const onDotClick = (e) => {\n    setDistrict(e.location);\n  };\n\n  const onVizChange = (e) => {\n    setViz(e);\n  };\n\n  const topicMeta = meta[chamber][topic];\n  const mapData = makeMapData(data[chamber][topic], indicator);\n  const chartData = makeChartData(data[chamber][topic], topicMeta, district);\n  const mappable = getMappable(topicMeta);\n\n  return (\n    <div className='App'>\n\n      <Container>\n        <header className='app-header'>\n          <h1>Connecticut Legislative Profiles</h1>\n        </header>\n\n        { /* INTRO ROW */ }\n        <Row>\n          <Col>\n            <Intro />\n          </Col>\n        </Row>\n\n        { /* CONTROLS */ }\n        <Row>\n          <Col>\n            <FormContext { ...formMethods }>\n              <Controls\n                // topics={ topics }\n                indicators={ mappable }\n                chambers={ chambers }\n                meta={ meta[chamber] }\n                onChange={ formMethods.handleSubmit(onFormChange) }\n              />\n            </FormContext>\n          </Col>\n        </Row>\n\n        <hr />\n\n        <Row>\n          { /* VIZ  */ }\n          <Col md={ 7 }>\n            <Stage\n              location={ district }\n              chamber={ chamber }\n              lbl={ makeVizHdr(viz, topicMeta, indicator) }\n              type='chart'\n            >\n              <VizContainer\n                tabs={{\n                  map: { title: 'Show map', icon: <FaGlobeAmericas /> },\n                  chart: { title: 'Show chart', icon: <FaChartBar /> }\n                }}\n                onChange={ onVizChange }\n              >\n\n                <Choropleth\n                  key='map'\n                  chamber={ chamber }\n                  shape={ shapes[chamber] }\n                  data={ mapData }\n                  colorscale={ makeChoroScale(mapData, palette, 5) }\n                  onClick={ onFeatureClick }\n                  townShp={ shapes['towns'] }\n                  showTowns={ toggles.townsToggled }\n                  meta={ getSubMeta(topicMeta.indicators, indicator) }\n                >\n                  <Toggle\n                    id='townsToggled'\n                    label='Show town boundaries'\n                    onChange={ onToggle }\n                    checked={ toggles.townsToggled }\n                  />\n                </Choropleth>\n\n                <Chart\n                  key='chart'\n                  data={ chartData }\n                  meta={ mappable }\n                  scales={ makeQualScales(district, palette[4]) }\n                  onClick={ onDotClick }\n                  district={ district }\n                />\n\n              </VizContainer>\n\n            </Stage>\n          </Col>\n\n          { /* PROFILE */ }\n          <Col md={ 5 }>\n            <Stage\n              location={ district }\n              chamber={ chamber }\n              lbl={ topicMeta.display }\n              type='profile'\n            >\n              <Profile\n                data={ getProfile(data[chamber][topic], district, topicMeta.indicators, toggles.ctToggled) }\n                legislator={ getLegislator(legislators[chamber], district) }\n                title={ titles[chamber] }\n                towns={ xwalk[chamber][district] }\n              >\n                <Toggle\n                  id='ctToggled'\n                  label='Compare to CT values'\n                  onChange={ onToggle }\n                  checked={ toggles.ctToggled }\n                />\n              </Profile>\n\n            </Stage>\n          </Col>\n        </Row>\n\n        { /* DISTRICT INFO */ }\n        <Row>\n          <Col>\n\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Footer />\n          </Col>\n        </Row>\n      </Container>\n\n    </div>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'leaflet/dist/leaflet.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}